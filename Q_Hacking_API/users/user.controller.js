const config = require('../config.json');
const jwt = require('jsonwebtoken');
const Role = require('../_helper/role');

const express = require('express');
const router = express.Router();
const userService = require('./user.service');
const authorize = require('../_helper/authorize')

// routes
router.get('/auth', authenticate);     // public route
router.get('/admin', authorize(Role.Admin), Admin); // admin only
router.get('/user', authorize(Role.User), User);       // all authenticated users
module.exports = router;

function authenticate(req, res, next) {
    if(!req.query.username){
        res.json({message: 'Who are you?'})
    }else{
       userService.authenticate(req.query.username)
        .then(user => user ? res.json(user) : res.status(400).json({ message: 'Username incorrect' }))
        .catch(err => next(err)); 
    }   
}

function User(req, res, next) {
    res.status(200).json({"flag":"Congrats on authenticating! Too bad flags arenâ€™t for normal users !!"})
}

function Admin(req, res, next) {
    const currentUser = req.user;
    console.log(currentUser);
    // only allow admins to access other user records
    if (currentUser.role !== Role.Admin) {
        return res.status(401).json({ message: 'Unauthorized' });
    }else{
        return res.status(200).json({ flag : "Q_api{JwT_ExploiTi0n_Is_C0ol}"})
    }

}